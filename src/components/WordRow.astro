---
import WordHover from "./WordHover.astro";
import wordsJson from "./words.json";
import WordSpan from "./WordSpan.astro";
interface Word {
    en: string;
    phon?: string;
    audio: string;
    stress?: string;
    note?: string;
}

type mapType = {
    [key: string]: Word;
};

const words = wordsJson as mapType;

interface Props {
    word: string;
}

const { word } = Astro.props;
const wordData: Word | undefined = words[word];
---

<tr class="wordRow">
    <td>
        <WordSpan word={word} wordAudio={wordData?.audio} />
    </td>
    {
        wordData ? (
            Object.entries(wordData).map(([key, value]) => {
                if (key === "audio" || key === "note") {
                    return null;
                }

                if (key === "en" && wordData.note) {
                    return (
                        <td>
                            <WordHover
                                word={`${value}`}
                                hoverText={wordData.note}
                            />
                        </td>
                    );
                }

                if (key === "phon") {
                    return <td>[{value}]</td>;
                }

                return <td>{value}</td>;
            })
        ) : (
            <p style="color:red">{word} not found.</p>
        )
    }
</tr>
